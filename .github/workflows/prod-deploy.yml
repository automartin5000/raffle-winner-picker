# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: prod-deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  find_artifact:
    name: Find PR Artifact
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Find merged PR
        id: find-pr
        run: |-
          PR_NUMBER=$(gh pr list --state merged --limit 1 --json number,mergeCommit --jq '.[] | select(.mergeCommit.oid == "${{ github.sha }}") | .number')
          echo "pr-number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "artifact-name=cdk-out-pr-$PR_NUMBER" >> $GITHUB_OUTPUT
  deploy_production:
    name: Deploy to Production
    needs: find_artifact
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::${{ secrets.PROD_AWS_ACCOUNT_ID }}:role/github-actions-deployer
      - name: Download PR CDK artifacts
        uses: actions/download-artifact@v4
        with:
          name: cdk-out-pr-${{ needs.find_artifact.outputs.pr-number }}
          path: cdk.out/
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install AWS CDK
        run: npm install -g aws-cdk@^2.1022.0
      - name: CDK Bootstrap Production
        run: cdk bootstrap
      - name: Deploy to Production
        run: cdk deploy --app cdk.out --require-approval never --context envName=prod
      - name: Get Production URL
        id: get-prod-url
        run: |-
          URL=$(cdk --app cdk.out --context envName=prod --outputs-file prod-outputs.json deploy --require-approval never 2>/dev/null && cat prod-outputs.json | jq -r '.[] | select(.CloudFrontUrl) | .CloudFrontUrl' || echo "Deployment completed")
          echo "PROD_URL=$URL" >> $GITHUB_OUTPUT
      - name: Notify deployment success
        run: |-
          echo "ðŸŽ‰ Production deployment successful!"
          echo "URL: ${{ steps.get-prod-url.outputs.PROD_URL }}"

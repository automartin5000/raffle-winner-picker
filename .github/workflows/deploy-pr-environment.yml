# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: deploy-pr-environment
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
env:
  AWS_CDK_ENV_NAME: pr${{ github.event.number }}
  NONPROD_AWS_ACCOUNT_ID: ${{ secrets.NONPROD_AWS_ACCOUNT_ID }}
  PROD_AWS_ACCOUNT_ID: ${{ secrets.PROD_AWS_ACCOUNT_ID }}
  NONPROD_HOSTED_ZONE: ${{ secrets.NONPROD_HOSTED_ZONE }}
  PROD_HOSTED_ZONE: ${{ secrets.PROD_HOSTED_ZONE }}
jobs:
  deploy_pr:
    name: Deploy PR Environment
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::${{ secrets.NONPROD_AWS_ACCOUNT_ID }}:role/github-actions-deployer
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Wait for build workflow
        uses: actions/github-script@v7
        with:
          script: "

            \              async function waitForBuild() {

            \                const maxAttempts = 60;  // 10 minutes (60 * 10 seconds)

            \                const ref = context.payload.pull_request?.head.sha || context.sha;

            \               \ 

            \                console.log('Event type:', context.eventName);

            \                console.log('Looking for build workflow runs for commit:', ref);

            \                console.log('PR number:', context.payload.pull_request?.number);

            \               \ 

            \                // First, list all workflows to find the build workflow by name

            \                const workflows = await github.rest.actions.listRepoWorkflows({

            \                  owner: context.repo.owner,

            \                  repo: context.repo.repo,

            \                });

            \               \ 

            \                console.log('Available workflows:');

            \                workflows.data.workflows.forEach(w => {

            \                  console.log(`- ${w.name} (ID: ${w.id}, Path: ${w.path})`);

            \                });

            \               \ 

            \                const buildWorkflow = workflows.data.workflows.find(w => w.name === 'build');

            \               \ 

            \                if (!buildWorkflow) {

            \                  throw new Error('Could not find workflow named \"build\"');

            \                }

            \               \ 

            \                console.log('Found build workflow:', buildWorkflow.name, buildWorkflow.id);

            \               \ 

            \                for (let attempt = 0; attempt < maxAttempts; attempt++) {

            \                  console.log(`\\n[Attempt ${attempt + 1}/${maxAttempts}] Checking build status...`);

            \                 \ 

            \                  // Get all recent runs for this workflow

            \                  const builds = await github.rest.actions.listWorkflowRuns({

            \                    owner: context.repo.owner,

            \                    repo: context.repo.repo,

            \                    workflow_id: buildWorkflow.id,

            \                    head_sha: ref,

            \                    event: 'pull_request',

            \                    branch: context.payload.pull_request?.head.ref,

            \                  });

            \                 \ 

            \                  console.log('Query parameters:');

            \                  console.log('- Owner:', context.repo.owner);

            \                  console.log('- Repo:', context.repo.repo);

            \                  console.log('- Workflow ID:', buildWorkflow.id);

            \                  console.log('- Head SHA:', ref);

            \                  console.log('- Branch:', context.payload.pull_request?.head.ref);

            \                 \ 

            \                  console.log(`Found ${builds.data.workflow_runs.length} workflow runs for this commit`);

            \                 \ 

            \                  if (builds.data.workflow_runs.length > 0) {

            \                    const build = builds.data.workflow_runs[0];

            \                    console.log('Latest build details:');

            \                    console.log(`- Run ID: ${build.id}`);

            \                    console.log(`- Status: ${build.status}`);

            \                    console.log(`- Conclusion: ${build.conclusion}`);

            \                    console.log(`- Created: ${build.created_at}`);

            \                    console.log(`- URL: ${build.html_url}`);

            \                   \ 

            \                    if (build.status === 'completed') {

            \                      if (build.conclusion === 'success') {

            \                        console.log('✅ Build completed successfully, continuing with deployment');

            \                        return;

            \                      } else {

            \                        throw new Error(`❌ Build failed with conclusion: ${build.conclusion}`);

            \                      }

            \                    } else {

            \                      console.log('⏳ Build is still in progress, waiting...');

            \                    }

            \                  } else {

            \                    console.log('No matching workflow runs found yet, waiting...');

            \                  }

            \                 \ 

            \                  await new Promise(resolve => setTimeout(resolve, 10000)); // Wait 10 seconds

            \                }

            \               \ 

            \                throw new Error('Timed out waiting for build to complete');

            \              }

            \             \ 

            \              return await waitForBuild();

            \            "
      - name: Download CDK artifacts
        uses: actions/download-artifact@v4
        with:
          name: cdk-out-pr-${{ github.event.number }}
          path: cdk.out/
      - name: CDK Bootstrap (if needed)
        run: bunx projen cdk-bootstrap --trust-for-lookup ${{ secrets.PROD_AWS_ACCOUNT_ID }}
      - name: Generate CDK Diff
        id: cdk-diff
        run: |-
          cdk diff --app cdk.out --context envName=pr${{ github.event.number }} > cdk-diff.txt 2>&1 || true
          echo "CDK_DIFF<<EOF" >> $GITHUB_OUTPUT
          cat cdk-diff.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Deploy ephemeral environment
        run: bunx projen deploy --app cdk.out --require-approval never
      - name: Get CloudFront URL
        id: get-url
        run: |-
          URL=$(cdk --app cdk.out --context envName=pr${{ github.event.number }} --outputs-file outputs.json deploy --require-approval never 2>/dev/null && cat outputs.json | jq -r '.[] | select(.CloudFrontUrl) | .CloudFrontUrl' || echo "Not available yet")
          echo "CLOUDFRONT_URL=$URL" >> $GITHUB_OUTPUT
  comment:
    name: Comment PR Environment Status and diff
    needs: deploy_pr
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Find existing comment
        id: find-comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: github-actions[bot]
          body-includes: "## 🚀 PR Environment Status"
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |-
            ## 🚀 PR Environment Status

            **Environment:** `pr${{ github.event.number }}`
            **Status:** ${{ needs.deploy_ephemeral.result == 'success' && '✅ Deployed' || '❌ Failed' }}
            **Preview URL:** Deployment in progress...

            ### 📋 CDK Diff
            <details>
            <summary>Click to view infrastructure changes</summary>

            ```diff
            CDK diff will be shown here
            ```
            </details>

            ### 🔒 Security Scan
            **Status:** ${{ needs.security.result == 'success' && '✅ Passed' || '❌ Failed' }}

            ---
            *Last updated: ${{ github.event.head_commit.timestamp }}*
            *Commit: ${{ github.event.head_commit.id }}*
